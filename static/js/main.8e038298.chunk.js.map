{"version":3,"sources":["toyBrowser/parseHtml/util.ts","toyBrowser/parseHtml/TagCreater.ts","toyBrowser/computeCss/index.js","toyBrowser/computeCss/Specificity.ts","toyBrowser/parseHtml/index.ts","toyBrowser/parseHtml/createStateMachine.ts","pages/Home/components/G6Graph.js","pages/Home/components/DomTreeGraph.tsx","pages/Home/index.tsx","toyBrowser/data.ts","App.tsx","index.tsx"],"names":["isASCIIAlpha","char","test","isUpper","isSpace","isEOF","TagCreater","tagType","tag","attrs","currentAttr","this","name","value","push","type","tagName","selectors","relatedCssRules","attrbutes","reduce","prev","c","children","isMatchSelector","must","own","every","includes","bindCssRules","rules","token","parents","parentSelectors","map","forEach","rule","nodeSelector","selectorItems","items","slice","pop","length","nodes","reverse","current","i","isMatchCss","computedStyle","style","styleSpecificity","specificity","declarations","property","a","b","isGreaterOrEqual","compute","createEmit","stack","cssRules","currentTextNode","array","text","top","content","className","class","classItems","trim","split","id","creatTagSelectors","Error","css","stylesheet","selector","splitSlector","flat","startsWith","parseHtml","html","state","emit","tagCreater","data","tagOpen","endTagOpen","beforeAttrName","selfClosingStartTag","create","toLowerCase","selfClosing","afterAttrName","createAttr","attrName","beforeAttrValue","doubleAttrValue","singleAttrValue","unquotedAttrValue","afterAttrValue","attrValue","createStateMachine","COLLAPSE_ICON","x","y","r","EXPAND_ICON","G6","registerNode","drawShape","cfg","group","noStyleContent","rect","addShape","fill","stroke","width","styleItems","Object","entries","textAlign","textBaseline","bbox","getBBox","hasChildren","maxX","minX","height","symbol","lineWidth","attr","minY","DomTreeGraph","tree","hasStyle","ref","React","useRef","useState","graph","setGraph","useEffect","simplifyTree","item","raw","replace","render","fitView","container","TreeGraph","modes","default","onChange","collapsed","get","icon","find","element","defaultNode","anchorPoints","defaultEdge","layout","direction","getId","d","getHeight","getWidth","getVGap","getHGap","background","Content","Layout","Title","Typography","Paragraph","Text","Step","Steps","Home","setHtml","DOMTree","trimDOMTree","node","console","log","padding","justify","align","span","maxWidth","level","progressDot","Infinity","size","title","description","border","boxSizing","editable","whiteSpace","strong","App","path","component","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8e038298.chunk.js","sourcesContent":["type CheckChar = (char: string) => boolean\n\nexport const lastItem = (array: any[]) => array[array.length - 1]\n\nexport const isASCIIAlpha: CheckChar = (char) => /^[A-Za-z]$/.test(char)\n\nexport const isUpper: CheckChar = (char) => /^[A-Z]$/.test(char)\n\nexport const isSpace: CheckChar = (char) => /^[\\n\\t\\f ]$/.test(char)\n\nexport const isEOF: CheckChar = (char) => char === 'EOF'\n\nconst isAllSpace: CheckChar = (char) => /^[\\n\\t\\f ]*$/.test(char)\nexport function trimDOMTree(tree: any): any {\n  // 注意没有深克隆原对象\n  const children = []\n\n  // eslint-disable-next-line no-restricted-syntax\n  for (const node of tree.children) {\n    if (node.type === 'element') {\n      children.push(trimDOMTree(node))\n    } else if (node.type === 'text') {\n      if (!isAllSpace(node.content)) {\n        children.push(node)\n      }\n    }\n  }\n  return {\n    ...tree,\n    children,\n  }\n}\n","export default class TagCreater {\n  tag = ''\n\n  attrs: any[] = []\n\n  currentAttr: any\n\n  tagType: string\n\n  constructor(tagType: string = 'start') {\n    this.tagType = tagType\n  }\n\n  tagName(char: string) {\n    this.tag += char\n  }\n\n  createAttr() {\n    this.currentAttr = { name: '', value: '' }\n    this.attrs.push(this.currentAttr)\n  }\n\n  attrName(char: string) {\n    this.currentAttr.name += char\n  }\n\n  attrValue(char: string) {\n    this.currentAttr.value += char\n  }\n\n  selfClosing() {\n    this.tagType = 'selfClosing'\n  }\n\n  create() {\n    return {\n      type: 'element',\n      tagType: this.tagType,\n      tagName: this.tag,\n      selectors: null,\n      relatedCssRules: [],\n      attrbutes: this.attrs.reduce(\n        (prev, c) => ({\n          ...prev,\n          [c.name]: c.value,\n        }),\n        {}\n      ),\n      children: [],\n      // parent: null,\n    }\n  }\n}\n","import * as css from 'css'\nimport { getSpecificity, isGreaterOrEqual } from './Specificity'\n/**\n css 模块没有符合 typeScript 要求的 lib.d.ts\n 故使用 js\n */\n\nfunction splitSlector(text) {\n  return text.split(' ').map((c) => c.split(/(?=[.#])/))\n}\n\nexport function parseCssRules(text) {\n  const rules = css\n    .parse(text)\n    .stylesheet.rules.map((c) => {\n      return {\n        selectors: c.selectors,\n        declarations: c.declarations.map(({ property, value }) => ({\n          property,\n          value,\n        })),\n      }\n    })\n    .reduce((prev, c) => {\n      const items = c.selectors.map((selector) => {\n        const selectorItems = splitSlector(selector)\n\n        return {\n          selector,\n          selectorItems,\n          specificity: getSpecificity(selectorItems.flat()),\n          declarations: c.declarations,\n        }\n      })\n      prev.push(...items)\n\n      return prev\n    }, [])\n  return rules\n}\n\nexport function creatTagSelectors(tag) {\n  const selectors = []\n  selectors.push(tag.tagName)\n  const className = tag.attrbutes.class\n  if (className) {\n    const classItems = className\n      .trim()\n      .split(/[ ]+/)\n      .map((c) => `.${c}`)\n    selectors.push(...classItems)\n  }\n\n  const { id } = tag.attrbutes\n  if (id) {\n    selectors.push(`#${id}`)\n  }\n\n  return selectors\n}\n\nfunction isMatchSelector(must, own) {\n  return must.every((c) => own.includes(c))\n}\n\nfunction isMatchCss(nodeSelector, parentSelectors, selectorItems) {\n  // 此段实现很糟糕\n  const items = selectorItems.slice()\n  const first = items.pop()\n  const isMatchNode = isMatchSelector(first, nodeSelector)\n  if (isMatchNode) {\n    if (items.length === 0) {\n      return true\n    } else {\n      const nodes = parentSelectors.slice().reverse()\n      let current = items.pop()\n      for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i]\n        if (isMatchSelector(current, node)) {\n          if (items.length === 0) {\n            return true\n          } else {\n            current = items.pop()\n          }\n        }\n      }\n      return false\n    }\n  } else {\n    return false\n  }\n}\n\nfunction compute(rules) {\n  const style = {}\n  const styleSpecificity = {}\n  rules.forEach((rule) => {\n    const { specificity, declarations } = rule\n    declarations.forEach(({ property, value }) => {\n      if (style[property]) {\n        if (isGreaterOrEqual(specificity, styleSpecificity[property])) {\n          style[property] = value\n          styleSpecificity[property] = specificity\n        } else {\n          // do nothing\n        }\n      } else {\n        style[property] = value\n        styleSpecificity[property] = specificity\n      }\n    })\n  })\n\n  return style\n}\n\nexport function bindCssRules(rules, token, parents) {\n  const parentSelectors = parents.map((c) => c.selectors)\n  rules.forEach((rule) => {\n    if (isMatchCss(token.selectors, parentSelectors, rule.selectorItems)) {\n      token.relatedCssRules.push(rule)\n    }\n  }, [])\n\n  // eslint-disable-next-line no-param-reassign\n  token.computedStyle = compute(token.relatedCssRules)\n}\n","/* eslint-disable no-param-reassign */\ntype Spec = number[]\n\nexport function getSpecificity(selectors: string[]): Spec {\n  return selectors.reduce(\n    (prev, c) => {\n      if (c.startsWith('#')) {\n        prev[2] += 1\n      } else if (c.startsWith('.')) {\n        prev[1] += 1\n      } else {\n        prev[0] += 1\n      }\n\n      return prev\n    },\n    [0, 0, 0, 0]\n  )\n}\n\nexport function isGreaterOrEqual(a: Spec, b: Spec): boolean {\n  for (let i = 3; i >= 0; i -= 1) {\n    if (a[i] > b[i]) {\n      return true\n    } else if (a[i] < b[i]) {\n      return false\n    }\n  }\n  return true // 所有均相等\n}\n","// import { exmapleHtml } from '../data'\n\nimport createStateMachine from './createStateMachine'\nimport { parseCssRules, creatTagSelectors, bindCssRules } from '../computeCss'\n\n/**\n * 尝试通过 emit(type, char) 仅发送单个字符，\n * 由emit方法拼接字符串和生成节点\n * 并不实用，增加了一层中间状态，增加理解成本\n *\n *  数据表示状态机？\n * [{\n *    data: [\n *       { name: 'text-end', cond: c => c === '<', end: tagOpen  },\n *       { name: 'text', cond: else, end: data }\n *    ],\n *    tagOpen: [\n *       { name: '...', cond: c => c === '\\', end: 'text',  },\n *       { name: 'new-tag', cond: isTagName, end: tagName, reconsume: true }\n *    ]\n * }]\n */\n\nimport { lastItem } from './util'\n\nfunction createEmit(stack: any[]) {\n  const cssRules: any[] = []\n  let currentTextNode: any = null\n\n  return function emit(token: any) {\n    const top = lastItem(stack)\n    if (token.type === 'text') {\n      if (currentTextNode === null) {\n        currentTextNode = {\n          type: 'text',\n          content: '',\n        }\n        top.children.push(currentTextNode)\n      }\n      currentTextNode.content += token.char\n    } else if (token.type === 'element') {\n      currentTextNode = null\n      if (token.tagType === 'start' || token.tagType === 'selfClosing') {\n        // eslint-disable-next-line no-param-reassign\n        token.selectors = creatTagSelectors(token)\n        bindCssRules(cssRules, token, stack.slice(1))\n\n        top.children.push(token)\n        if (token.tagType === 'start') {\n          stack.push(token)\n        }\n      } else if (token.tagType === 'end') {\n        if (top.tagName === token.tagName) {\n          if (token.tagName === 'style') {\n            cssRules.push(...parseCssRules(top.children[0].content))\n          }\n          stack.pop()\n        } else {\n          throw new Error(`lose end tag ${top.tagName}`)\n        }\n      } else {\n        // 未归类\n      }\n    } else {\n      currentTextNode = null\n    }\n  }\n}\n\nexport { trimDOMTree } from './util'\n\nexport default function parseHtml(html: string): any {\n  const stack = [{ type: 'document', children: [] }]\n  const emit = createEmit(stack)\n  let state: any = createStateMachine(emit)\n  // eslint-disable-next-line no-restricted-syntax\n  for (const char of html) {\n    state = state(char)\n  }\n\n  state('EOF')\n  return stack[0]\n}\n","/* eslint-disable consistent-return */\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { isASCIIAlpha, isUpper, isSpace, isEOF } from './util'\nimport TagCreater from './TagCreater'\n\ntype Word = string\n\nexport default function createStateMachine(emit: any) {\n  let tagCreater = new TagCreater()\n\n  function data(char: Word) {\n    if (char === '<') {\n      return tagOpen\n    } else if (isEOF(char)) {\n      emit({ type: 'EOF' })\n    } else if (char === '\\u0000') {\n      // throw new Error('parse error')\n      return data\n    } else {\n      emit({\n        type: 'text',\n        char,\n      })\n      return data\n    }\n  }\n\n  function tagOpen(char: Word) {\n    if (char === '/') {\n      return endTagOpen\n    } else if (isASCIIAlpha(char)) {\n      tagCreater = new TagCreater('start')\n      return tagName(char)\n    } else {\n      // throw new Error('parse error')\n      return data\n    }\n  }\n\n  function endTagOpen(char: Word) {\n    if (isASCIIAlpha(char)) {\n      tagCreater = new TagCreater('end')\n      return tagName(char)\n    } else if (char === '>') {\n      // throw new Error('parse error')\n      return data\n    } else if (isEOF(char)) {\n      emit({ type: 'EOF' })\n      return data\n    } else {\n      // throw new Error('parse error')\n      return data\n    }\n  }\n\n  function tagName(char: Word) {\n    if (isSpace(char)) {\n      return beforeAttrName\n    } else if (char === '/') {\n      return selfClosingStartTag\n    } else if (char === '>') {\n      emit(tagCreater.create())\n      return data\n    } else if (isUpper(char)) {\n      tagCreater.tagName(char.toLowerCase())\n      return tagName\n    } else if (isEOF(char)) {\n      emit({ type: 'EOF' })\n      return data\n    } else {\n      tagCreater.tagName(char)\n      return tagName\n    }\n  }\n\n  function selfClosingStartTag(char: Word) {\n    if (char === '>') {\n      tagCreater.selfClosing()\n      emit(tagCreater.create())\n      return data\n    } else if (isEOF(char)) {\n      emit({ type: 'EOF' })\n    } else {\n      throw new Error('parse error')\n    }\n  }\n\n  function beforeAttrName(char: Word) {\n    if (isSpace(char)) {\n      return beforeAttrName\n    } else if (char === '/' || char === '>' || isEOF(char)) {\n      return afterAttrName(char)\n    } else if (char === '=') {\n      throw new Error('parse error')\n    } else {\n      tagCreater.createAttr()\n      return attrName(char)\n    }\n  }\n\n  function attrName(char: Word) {\n    if (isSpace(char) || char === '/' || char === '>' || isEOF(char)) {\n      return afterAttrName(char)\n    } else if (char === '=') {\n      return beforeAttrValue\n    } else if (isUpper(char)) {\n      tagCreater.attrName(char.toLowerCase())\n      return attrName\n    } else if (['\"', \"'\", '<', '\\u0000'].includes(char)) {\n      // throw new Error('parse error')\n      return data\n    } else {\n      tagCreater.attrName(char)\n      return attrName\n    }\n  }\n\n  function afterAttrName(char: Word): any {\n    if (isSpace(char)) {\n      return afterAttrName\n    } else if (char === '/') {\n      return selfClosingStartTag\n    } else if (char === '=') {\n      return beforeAttrValue\n    } else if (char === '>') {\n      emit(tagCreater.create())\n      return data\n    } else if (isEOF(char)) {\n      emit({ type: 'EOF' })\n      return data\n    } else {\n      tagCreater.createAttr()\n      return attrName(char)\n    }\n  }\n\n  function beforeAttrValue(char: Word) {\n    if (isSpace(char)) {\n      return beforeAttrValue\n    } else if (char === '\"') {\n      return doubleAttrValue\n    } else if (char === \"'\") {\n      return singleAttrValue\n    } else if (char === '>') {\n      // throw new Error('parse error')\n      return data\n    } else {\n      return unquotedAttrValue(char)\n    }\n  }\n\n  function doubleAttrValue(char: Word) {\n    if (char === '\"') {\n      return afterAttrValue\n      // } else if (char === '&') {\n      //   return charRefrence // 转义，暂不实现\n      // } else if (char === '\\u0000') {\n      // throw new Error('parse error')\n    } else if (isEOF(char)) {\n      emit({ type: 'EOF' })\n      return data\n    } else {\n      tagCreater.attrValue(char)\n      return doubleAttrValue\n    }\n  }\n\n  function singleAttrValue(char: Word) {\n    if (char === \"'\") {\n      return afterAttrValue\n      // } else if (char === '&') {\n      //   return charRefrence // 转义，暂不实现\n      // } else if (char === '\\u0000') {\n      // throw new Error('parse error')\n    } else if (isEOF(char)) {\n      emit({ type: 'EOF' })\n      return data\n    } else {\n      tagCreater.attrValue(char)\n      return singleAttrValue\n    }\n  }\n\n  function unquotedAttrValue(char: Word) {\n    if (isSpace(char)) {\n      return beforeAttrName\n      // } else if (char === '&') {\n      //   return charRefrence // 转义，暂不实现\n      // } else if (char === '\\u0000') {\n      // throw new Error('parse error')\n    } else if (char === '>') {\n      emit(tagCreater.create())\n      return data\n    } else if (isEOF(char)) {\n      emit({ type: 'EOF' })\n      return data\n    } else if (['\"', \"'\", '<', '=', '`'].includes(char)) {\n      // throw new Error('parse error')\n      return data\n    } else {\n      tagCreater.attrValue(char)\n      return unquotedAttrValue\n    }\n  }\n\n  function afterAttrValue(char: Word) {\n    if (isSpace(char)) {\n      return beforeAttrName\n    } else if (char === '/') {\n      return selfClosingStartTag\n    } else if (char === '>') {\n      emit(tagCreater.create())\n      return data\n    } else if (isEOF(char)) {\n      emit({ type: 'EOF' })\n      return data\n    } else {\n      // throw new Error('parse error')\n      return beforeAttrName(char)\n    }\n  }\n\n  return data\n}\n","import G6 from '@antv/g6'\n\nconst COLLAPSE_ICON = function COLLAPSE_ICON(x, y, r) {\n  return [\n    ['M', x, y],\n    ['a', r, r, 0, 1, 0, r * 2, 0],\n    ['a', r, r, 0, 1, 0, -r * 2, 0],\n    ['M', x + 2, y],\n    ['L', x + 2 * r - 2, y],\n  ]\n}\nconst EXPAND_ICON = function EXPAND_ICON(x, y, r) {\n  return [\n    ['M', x, y],\n    ['a', r, r, 0, 1, 0, r * 2, 0],\n    ['a', r, r, 0, 1, 0, -r * 2, 0],\n    ['M', x + 2, y],\n    ['L', x + 2 * r - 2, y],\n    ['M', x + r, y - r + 2],\n    ['L', x + r, y + r - 2],\n  ]\n}\n\nG6.registerNode(\n  'tree-node',\n  {\n    drawShape: function drawShape(cfg, group) {\n      const rect = group.addShape('rect', {\n        attrs: {\n          fill: '#ffadd2',\n          stroke: '#ffadd2',\n          width: 80,\n        },\n        name: 'rect-shape',\n      })\n      // const content = cfg.name.replace(/(.{19})/g, '$1\\n')\n      let content\n      let noStyleContent\n      if (cfg.computedStyle) {\n        const styleItems = Object.entries(cfg.computedStyle)\n        content = `${cfg.name}${\n          styleItems.length\n            ? styleItems.reduce((prev, c) => {\n                return `${prev}\\n${c[0]}:${c[1]}`\n              }, '')\n            : ''\n        }`\n\n        noStyleContent = `${cfg.name}${\n          styleItems.length ? styleItems.reduce((prev) => `${prev}\\n`, '') : ''\n        }`\n      } else {\n        content = cfg.name\n        noStyleContent = content\n      }\n\n      const text = group.addShape('text', {\n        attrs: {\n          text: content,\n          x: 0,\n          y: 0,\n          textAlign: 'left',\n          textBaseline: 'middle',\n          fill: '#c41d7f',\n        },\n        name: 'rect-shape',\n      })\n      group.addShape('text', {\n        attrs: {\n          text: noStyleContent,\n          x: 0,\n          y: 0,\n          textAlign: 'left',\n          textBaseline: 'middle',\n          fill: '#0a0a0a',\n        },\n        name: 'rect-shape',\n      })\n\n      const bbox = text.getBBox()\n      const hasChildren = cfg.children && cfg.children.length > 0\n      if (hasChildren) {\n        group.addShape('marker', {\n          attrs: {\n            x: bbox.maxX + 6,\n            y: bbox.minX + bbox.height / 2 - 6,\n            r: 6,\n            symbol: COLLAPSE_ICON,\n            stroke: '#666',\n            lineWidth: 2,\n          },\n          name: 'collapse-icon',\n        })\n      }\n      rect.attr({\n        x: bbox.minX - 4,\n        y: bbox.minY - 6,\n        width: bbox.width + (hasChildren ? 26 : 10),\n        height: bbox.height + 12,\n      })\n      return rect\n    },\n  },\n  'single-node'\n)\n\nexport function createGraph(container) {\n  const graph = new G6.TreeGraph({\n    container,\n    width: 675,\n    height: 675 * 0.618,\n    modes: {\n      default: [\n        {\n          type: 'collapse-expand',\n          onChange: function onChange(item, collapsed) {\n            const data = item.get('model')\n            const icon = item\n              .get('group')\n              .find((element) => element.get('name') === 'collapse-icon')\n            if (collapsed) {\n              icon.attr('symbol', EXPAND_ICON)\n            } else {\n              icon.attr('symbol', COLLAPSE_ICON)\n            }\n            data.collapsed = collapsed\n            return true\n          },\n        },\n        'drag-canvas',\n        'zoom-canvas',\n      ],\n    },\n    defaultNode: {\n      type: 'tree-node',\n      anchorPoints: [\n        [0, 0.5],\n        [1, 0.5],\n      ],\n    },\n    defaultEdge: {\n      type: 'cubic-horizontal',\n      style: {\n        stroke: '#A3B1BF',\n      },\n    },\n    layout: {\n      type: 'compactBox',\n      direction: 'LR',\n      getId: function getId(d) {\n        return d.id\n      },\n      getHeight: function getHeight() {\n        return 16\n      },\n      getWidth: function getWidth() {\n        return 16\n      },\n      getVGap: function getVGap() {\n        return 20\n      },\n      getHGap: function getHGap() {\n        return 80\n      },\n    },\n  })\n\n  return graph\n}\n","import React, { useEffect, useState } from 'react'\nimport { createGraph } from './G6Graph'\n\nfunction simplifyTree(item: any, hasStyle: boolean = false) {\n  if (item.type === 'document') {\n    // eslint-disable-next-line no-param-reassign\n    // eslint-disable-next-line no-param-reassign\n    return {\n      name: 'document',\n      children: item.children.map((c: any) => simplifyTree(c, hasStyle)),\n    }\n  } else if (item.type === 'element') {\n    const raw = {\n      name: item.tagName,\n      children: item.children.map((c: any) => simplifyTree(c, hasStyle)),\n    }\n    if (hasStyle) {\n      return {\n        ...raw,\n        computedStyle: item.computedStyle,\n      }\n    } else {\n      return raw\n    }\n  } else {\n    return {\n      name: `[text]:\\n${item.content.trim().replace('\\n', ' ').slice(0, 20)}${\n        item.content.length > 20 ? '...' : ''\n      }`,\n    }\n  }\n}\n\ninterface Props {\n  tree: any\n  hasStyle?: boolean\n}\n\n// eslint-disable-next-line react/prop-types\nconst DomTreeGraph: React.FC<Props> = ({ tree, hasStyle = false }) => {\n  const ref = React.useRef(null)\n  const [graph, setGraph]: [any, any] = useState()\n\n  useEffect(() => {}, [])\n\n  useEffect(() => {\n    if (!graph) {\n      setGraph(createGraph(ref.current))\n      // 此处需要规避反复渲染\n    } else {\n      const data = simplifyTree(tree, hasStyle)\n      graph.data(data)\n      graph.render()\n      graph.fitView()\n    }\n  }, [tree, graph, hasStyle])\n\n  return <div ref={ref} style={{ background: '#fff0f6' }} />\n}\n\nexport default DomTreeGraph\n","import React, { FC, useState } from 'react'\n\nimport { Typography, Layout, Row, Col, Steps } from 'antd'\n\nimport { exmapleHtml } from '../../toyBrowser/data'\nimport { parseHtml } from '../../toyBrowser'\nimport { trimDOMTree } from '../../toyBrowser/parseHtml'\nimport DomTreeGraph from './components/DomTreeGraph'\n\nconst { Content } = Layout\nconst { Title, Paragraph, Text } = Typography\nconst { Step } = Steps\n\nconst Home: FC = () => {\n  const [html, setHtml] = useState(exmapleHtml)\n  const DOMTree = trimDOMTree(parseHtml(html))\n  // eslint-disable-next-line no-console\n  console.log('%c解析结果', 'font-size: 1.8em')\n  // eslint-disable-next-line no-console\n  console.log(DOMTree)\n\n  return (\n    <Layout>\n      <Content style={{ padding: '40px' }}>\n        <Row justify=\"center\" align=\"top\">\n          <Col\n            span={18}\n            style={{ maxWidth: '750px', background: '#fff', padding: '24px' }}\n          >\n            <Title level={2}>玩具浏览器</Title>\n\n            <Steps\n              progressDot\n              current={Infinity}\n              direction=\"vertical\"\n              size=\"default\"\n            >\n              <Step\n                title={<Title level={3}>HTML</Title>}\n                style={{ width: '100%' }}\n                description={\n                  <div\n                    style={{\n                      padding: '.5em',\n                      border: '1px solid #f0f2f6',\n                      boxSizing: 'border-box',\n                    }}\n                  >\n                    <Paragraph\n                      editable={{\n                        onChange: setHtml,\n                      }}\n                      style={{\n                        whiteSpace: 'pre-wrap',\n                      }}\n                    >\n                      {html}\n                    </Paragraph>\n                  </div>\n                }\n              />\n              <Step\n                title={<Title level={3}>DOM tree</Title>}\n                style={{ width: '100%' }}\n                description={\n                  <>\n                    <Text>\n                      <Text strong>注意</Text>{' '}\n                      展示的结果省略了只有空白的文本节点\n                    </Text>\n                    <DomTreeGraph tree={DOMTree} />\n                  </>\n                }\n              />\n              <Step\n                title={<Title level={3}>DOM tree with CSS</Title>}\n                style={{ width: '100%' }}\n                description={<DomTreeGraph tree={DOMTree} hasStyle />}\n              />\n            </Steps>\n          </Col>\n        </Row>\n      </Content>\n    </Layout>\n  )\n}\n\nexport default Home\n","export const exmapleHtml = `<html maaa=aa >\n<head>\n    <style>\n        body div #myid{\n            width:100px;\n            background-color: #ff5000;\n        }\n        body div.box1.box2#box { width:100px; height: 100px;  background-color: #ff0000; }\n        body .box1.box2#box{ background-color: #0000ff; }\n        img {\n            height: 30px;\n        }\n        body div img{\n            width:30px;\n            background-color: #ff1111;\n        }\n        h1 {\n            color: red;\n        }\n        body {\n            background: #f3f3f3;\n        }\n    </style>\n</head>\n<body>\n    <h1>hello world</h1>     \n    <div>\n        <div id='box' class='box1 box2'></div>\n        <img id=\"myid\" />\n        <img />\n    </div>\n</body>\n</html>\n`\n","import React from 'react'\nimport { HashRouter, Switch, Route } from 'react-router-dom'\n\nimport Home from './pages/Home/index'\n\nconst App: React.FC = () => {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path=\"/\" component={Home} exact />\n      </Switch>\n    </HashRouter>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n// import { Provider } from 'react-redux'\n// import store from './store'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}